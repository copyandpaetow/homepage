:where(.switch) {
  display: grid;
  position: relative;
  cursor: pointer;
  gap: clamp(1em, 4vw, 2em);
  grid-template-columns: max-content 1fr;
  grid-auto-rows: min-content;

  &:has(:first-child.toggle) {
    grid-template-columns: 1fr max-content;
  }

  .toggle {
    --aspect-ratio: 1.75;
    --accent-color: oklch(60.31% 0.22 257.866);
    --border-radius: 20px;

    aspect-ratio: var(--aspect-ratio);
    height: 100%;
    max-height: 30px;
    background-color: grey;
    border-radius: var(--border-radius);
    border: 1px solid white;
    position: relative;
  }

  &:has(:focus) .toggle {
    outline: 2px solid var(--accent-color);
    outline-offset: 2px;
  }

  .toggle::before {
    content: "";
    position: absolute;
    inset: 0;
    background-color: var(--accent-color);
    border-radius: var(--border-radius);
    opacity: 0;
    transition: opacity 400ms ease;
  }

  &:has(input:checked) .toggle::before {
    opacity: 1;
  }

  .toggle::after {
    --height: 90%;
    --offset: calc((100% - var(--height)) / 2);

    content: "";
    display: block;
    aspect-ratio: 1;
    height: var(--height);
    background-color: white;
    border-radius: 20000px;
    transform: translate(var(--offset), var(--offset));
    transition: transform 400ms ease;
  }

  &:has(input:checked) .toggle::after {
    transform: translate(
      calc((100% * var(--aspect-ratio)) - (100% - 4 * var(--offset))),
      var(--offset)
    );
  }

  & > input {
    position: absolute;
    opacity: 0;
    inset: 0;
  }
}
